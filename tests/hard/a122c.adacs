-- $A122C -- adapted from the following ACVC test(s):
--    C55B04A-AB.ADA
 
-- CHECK THAT A LOOP IS NOT ENTERED IF THE LOWER BOUND OF THE DISCRETE
--   RANGE IS GREATER THAN THE UPPER BOUND, WHETHER REVERSE IS PRESENT
--   OR NOT.
-- CHECK THAT LOOP BOUNDS ARE EVALUATED ONLY ONCE, UPON ENTRY TO 
--   THE LOOP.
 
PACKAGE Main IS
 
     C10 : CONSTANT INTEGER := 10;
     I10 : INTEGER;
 
BODY BEGIN
     WRITE("Test $A122C:"; NEXT);
 
     -- NOTE: EXIT STATEMENTS ARE INCLUDED TO AID IN RECOVERY FROM
     --   TEST FAILURE.
 
     -- SUBTESTS INVOLVING STATIC BOUNDS:
 
     FOR I IN 10..1 LOOP
          WRITE(NEXT; "==> LOOPING OVER NULL RANGE 10..1" );
          EXIT;
     END LOOP;
 
     FOR I IN REVERSE  -1..-10 LOOP
          WRITE(NEXT; "==> LOOPING OVER NULL RANGE -1..-10" );
          EXIT;
     END LOOP;
 
     FOR I IN (C10 + 3)..(-3 * C10 + 27) LOOP     -- 13..-3
          WRITE(NEXT; "==> LOOPING OVER NULL RANGE (C10 + 3)..(-3 * C10 + 27)");
          EXIT;
     END LOOP;
 
     -- SUBTESTS INVOLVING DYNAMIC BOUNDS:
 
     I10 := 10;
 
     FOR I IN REVERSE I10..(I10-1) LOOP           -- 10..9
          WRITE(NEXT; "==> LOOPING OVER NULL RANGE I10..(I10-1)");
          EXIT;
     END LOOP;
 
 
     FOR I IN (C10 - I10)..(I10 - 11) LOOP        -- 0..-1
          WRITE(NEXT; "==> LOOPING OVER NULL RANGE (C10 - I10)..(I10 - 11)" );
          EXIT;
     END LOOP;
 
     -- SUBTEST OF BOUNDS EVALUTION ONLY AT ENTRY:
 
     FOR I IN 1..I10 LOOP
          I10 := I10 - 1;
     END LOOP;
     IF (I10 /= 0) THEN
          WRITE(NEXT; "==> LOOP BOUNDS NOT FIXED AT LOOP ENTRY" );
     END IF;
 
     WRITE(NEXT);
 
END Main;
