-- $L121C -- adapted from the following ACVC test(s):
--   C45201A.ADA
 
-- CHECK THAT  '='  AND  '/='  PRODUCE CORRECT RESULTS ON
--    ENUMERATION-TYPE OPERANDS (IN PARTICULAR, FOR OPERANDS HAVING
--    DIFFERENT SUBTYPES).
-- THIS TEST'S FRAMEWORK IS FROM  C45201B.ADA , C45210A.ADA .
 
PACKAGE Main IS
 
 
     TYPE  T  IS  ( A , SLIT , B , PLIT , C , NUL , D ,  R , E );
 
     --                 S-LIT ,    P-LIT ,    NUL ,     'R'   CORRESPOND
     --            TO    'S'  ,     'P'  ,    'M'  ,    'R'  IN C45210A.
 
     SUBTYPE  T1  IS  T RANGE A..B ;
     SUBTYPE  T2  IS  T RANGE A..C ;    -- INCLUDES  T1
     SUBTYPE  T3  IS  T RANGE B..D ;    -- INTERSECTS  T2 , T4
     SUBTYPE  T4  IS  T RANGE C..E ;    -- DISJOINT FROM  T1 , T2
 
     MVAR  : T3 := NUL ;
     PVAR  : T2 := PLIT ;
     RVAR  : T4 := R ;
     SVAR  : T1 := SLIT ;
 
     ERROR_COUNT : INTEGER := 0 ;   -- INITIAL VALUE ESSENTIAL
 
BODY
 
     PROCEDURE  BUMP  IS
     BEGIN
          ERROR_COUNT := ERROR_COUNT + 1 ;
     END BUMP ;
 
     FUNCTION EQUAL(X, Y : INTEGER) RETURN BOOLEAN IS
     BEGIN
       RETURN X = Y;
     END;
 
     FUNCTION  ITSELF( THE_ARGUMENT : T )  RETURN  T  IS
     BEGIN
          IF  EQUAL(2,2)  THEN  RETURN THE_ARGUMENT;
          ELSE  RETURN  A ;
          END IF;
     END ;
 
BEGIN
 
     WRITE("Test $L121C:");  WRITE(NEXT);
 
    -----------------------------------------------------------------
 
     -- PART 2
 
     --  'BUMP'  STILL MEANS  'BUMP THE ERROR COUNT'
 
     ERROR_COUNT := 0 ;
 
     FOR  AVAR IN  T'FIRST..T'LAST  LOOP           -- 9 VALUES
          FOR  BVAR  IN  T'FIRST..T'LAST  LOOP     -- 9 VALUES
 
               IF  AVAR  = BVAR  THEN
                    IF  AVAR /= BVAR  THEN  BUMP ;  END IF;
               END IF;
 
               IF  AVAR /= BVAR  THEN
                    IF  AVAR  = BVAR  THEN  BUMP ;  END IF;
               END IF;
 
          END LOOP;
     END LOOP;
 
     IF  ERROR_COUNT /= 0  THEN
          WRITE(NEXT);
          WRITE( "==> EQUALITY OF ENUMERATION VALUES - FAILURE2" );
     END IF;
 
     ERROR_COUNT := 0 ;
     FOR  IVAR IN  0..8  LOOP                      -- 9 VALUES
 
          FOR  JVAR  IN  0..8   LOOP               -- 9 VALUES
 
               IF ( IVAR /= JVAR ) /= ( T'VAL(IVAR) /= T'VAL(JVAR) )THEN
                    BUMP ;
               END IF;
 
               IF ( IVAR  = JVAR ) /= ( T'VAL(IVAR)  = T'VAL(JVAR) )THEN
                    BUMP ;
               END IF;
 
          END LOOP;
 
     END LOOP;
 
     IF  ERROR_COUNT /= 0  THEN
          WRITE(NEXT);
          WRITE( "==> EQUALITY OF ENUMERATION VALUES - FAILURE4" );
     END IF;
 
 
     ERROR_COUNT := 0 ;
 
     FOR  AVAR IN  T'FIRST..T'LAST  LOOP    -- 9 VALUES (THE DIAGONAL)
 
          IF  AVAR  = ITSELF(AVAR)  THEN NULL;  ELSE BUMP;  END IF; 
          IF  AVAR /= ITSELF(AVAR)  THEN BUMP;              END IF; 
 
     END LOOP;
 
     IF  ERROR_COUNT /= 0  THEN
          WRITE(NEXT);
          WRITE( "==> EQUALITY OF ENUMERATION VALUES - FAILURE5" );
     END IF;
 
 
     -- 'BUMP'  MEANS  'INCREASE THE COUNT FOR THE NUMBER OF <TRUE>S'
 
     ERROR_COUNT := 0 ;
 
     FOR  AVAR IN  T'FIRST..T'LAST  LOOP           -- 9 VALUES
          FOR  BVAR  IN  T'FIRST..T'LAST  LOOP     -- 9 VALUES
 
               IF  AVAR /= BVAR  THEN  BUMP ;  END IF;   -- COUNT +:= 72
 
          END LOOP;
     END LOOP;
 
     IF  ERROR_COUNT /= 72  THEN   -- THIS IS A PLAIN COUNT, NOT AN
                                   --    ERROR COUNT
          WRITE(NEXT);
          WRITE( "==> EQUALITY OF ENUMERATION VALUES - FAILURE6" );
     END IF;
 
     WRITE(NEXT);
 
END Main;
