-- $S029C -- adapted from the following ACVC test(s):
--   CB4009A-AB.ADA  -- I'm not sure this modified version works or not
 
-- CHECK THAT A PROGRAMMER DEFINED EXCEPTION AND A REDECLARED
-- PREDEFINED EXCEPTION MAY BE PROPAGATED OUT OF SCOPE AND BACK IN,
-- WITH OUT-OF-SCOPE 'OTHERS' HANDLERS HANDLING THE EXCEPTION
-- INSTEAD OF OTHER HANDLERS. SEPARATELY COMPILED UNITS ARE NOT TESTED.
 
PACKAGE Main IS
 
     E : EXCEPTION;
 
     I : INTEGER := 0;
 
     PROCEDURE P1 (C : INTEGER);
     PROCEDURE P2 (C : INTEGER);
     PROCEDURE P3 (C : INTEGER);
 
     F : BOOLEAN := FALSE;
     T : CONSTANT BOOLEAN := TRUE;
 
BODY
 
     PROCEDURE P1 (C : INTEGER) IS
     BEGIN
          I := I + 1;       -- special kludge added to remove (**)
          P3(C);
          I := I - 1;       -- part of the special kludge
     EXCEPTION
          WHEN E => F := T; I := I - 1;   -- dec(I) added
          WHEN CONSTRAINT_ERROR => F := T;  I := I - 1;  -- dec(I) added
          --  WHEN OTHERS => I := I + 1; RAISE;    (**) -- see above lines
     END P1;
 
     PROCEDURE P2 (C : INTEGER) IS
          E : EXCEPTION;
          CONSTRAINT_ERROR : EXCEPTION;
     BEGIN
          CASE C IS
               WHEN 0 => WRITE(NEXT; "==> WRONG CASE");
               WHEN 1 => RAISE E;
               WHEN -1 => RAISE CONSTRAINT_ERROR;
               WHEN OTHERS => P1 (C - C/ABS(C));
          END CASE;
     EXCEPTION
          WHEN E =>
               I := I + 100; RAISE E;
          WHEN CONSTRAINT_ERROR =>
               I := I + 101; RAISE CONSTRAINT_ERROR;
          WHEN OTHERS =>
               F := T;
     END P2;
 
     PROCEDURE P3 (C : INTEGER) IS
     BEGIN
          P2(C);
     EXCEPTION
          WHEN E => F := T;
          WHEN CONSTRAINT_ERROR => F := T;
     END P3;
 
BEGIN
     WRITE("Test $S029C:"; NEXT);
 
     I := 0;
     BEGIN
          P3 (-2);
          WRITE(NEXT; "==> EXCEPTION NOT RAISED 1");
     EXCEPTION
          WHEN OTHERS => NULL;
     END;
     IF I /= 203 THEN
          WRITE(NEXT; "==> INCORRECT HANDLER SOMEWHERE 1");
     END IF;
 
     I := 0;
     BEGIN
          P3(3);
          WRITE(NEXT; "==> EXCEPTION NOT RAISED 2");
     EXCEPTION
          WHEN OTHERS => NULL;
     END;
     IF I /= 302 THEN
          WRITE(NEXT; "==> INCORRECT HANDLER SOMEWHERE 2");
     END IF;
 
     IF F = T THEN
          WRITE(NEXT; "==> WRONG HANDLER SOMEWHERE");
     END IF;
 
     WRITE(NEXT);
END Main;
